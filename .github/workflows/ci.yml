name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: yarn install --ignore-engines

      - name: Run Node.js Application
        shell: powershell
        run: |
          # Start the Node.js process and redirect output to a log file
          npx ts-node src/index.ts | Tee-Object -FilePath output.log
          Start-Sleep -Seconds 10  # Increased wait time to ensure server is ready

      - name: Wait for the Node.js app to start
        run: Start-Sleep -Seconds 10  # Additional wait

      - name: Check Connection to the Node.js API
        shell: powershell
        run: |
          # Extract the port number from the output
          $portLine = Get-Content output.log | Select-String -Pattern "Server is running on port"
          $port = $portLine -replace '.*port ', '' -replace '\D', '' # Ensure only the port number is left
          Write-Host "Testing connection on port: $port"
          
          # Check if the server is reachable
          $connectionTest = Test-NetConnection -ComputerName localhost -Port $port
          if (-not $connectionTest.TcpTestSucceeded) {
            Write-Error "Unable to connect to the server on port $port"
            exit 1
          }
          
          # Use the extracted port to make a request
          $response = Invoke-WebRequest -Uri "http://localhost:$port"
          Write-Host "Response: $($response.Content)"

      - name: Read Application Logs
        run: |
          echo "Output Log:"
          Get-Content output.log
          echo "Error Log:"
          Get-Content error.log
